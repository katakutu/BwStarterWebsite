version: '3'

services:
    mysql:
        image: mysql
        environment:
            MYSQL_RANDOM_ROOT_PASSWORD: "yes"
            MYSQL_DATABASE: bwstarter
            MYSQL_USER: bwstarter
            MYSQL_PASSWORD: password
        volumes:
            - db-mysql:/var/lib/mysql:rw
            # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
            # - ./docker/db/data:/var/lib/mysql:rw
        ports:
            - "4306:3306"

    php:
        build:
            context: ./api
            dockerfile: ./_docker/php/Dockerfile
        depends_on:
            - mysql
        env_file:
            - ./api/.env
        # Comment out these volumes in production
        volumes:
            - ./api:/srv/api:rw
            # If you develop on Linux, comment out the following volumes to just use bind-mounted project directory from host
            - /srv/api/var/
            - /srv/api/var/cache/
            - /srv/api/var/logs/
            - /srv/api/var/sessions/

    nginx:
        build:
            context: ./api
            dockerfile: ./_docker/nginx/Dockerfile
        depends_on:
            - php
        ports:
            - "8080:80"
        volumes:
            - ./api/public:/srv/api/public:ro

    varnish:
        build:
            context: ./api
            dockerfile: ./_docker/varnish/Dockerfile
        depends_on:
            - nginx
        # Comment out this volume in production
        volumes:
            - ./api/_docker/varnish/conf:/etc/varnish:ro
        ports:
            - "8081:80"

    app:
        # Use a static website hosting service in production
        build:
            context: ./app
            dockerfile: ./Dockerfile
        env_file:
            - ./app/.env
        volumes:
            - ./app:/usr/src/app:rw
            - /usr/src/app/node_modules
        ports:
            - "80:3000"

volumes:
    db-mysql: {}
